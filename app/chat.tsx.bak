import { useEffect, useRef, useState } from "react";
import { View, FlatList, TextInput as RNInput, KeyboardAvoidingView, Platform } from "react-native";
import { Appbar, Button, Text, ActivityIndicator } from "react-native-paper";
import { useChatStore } from "../src/state/chatStore";
import { wsStreamer, mockStreamer } from "../src/lib/chatClient";

export default function Chat() {
  const { messages, send, sending, reset } = useChatStore();
  const [input, setInput] = useState("");
  const listRef = useRef<FlatList>(null);
  useEffect(()=>{ listRef.current?.scrollToEnd({ animated:true }); },[messages]);

  const streamer = process.env.EXPO_PUBLIC_CHAT_URL ? wsStreamer : mockStreamer;

  return (
    <KeyboardAvoidingView style={{ flex:1 }} behavior={Platform.OS==="ios" ? "padding" : undefined}>
      <Appbar.Header>
        <Appbar.Content title="Chat" />
        <Appbar.Action icon="delete" onPress={reset} />
      </Appbar.Header>

      <FlatList
        ref={listRef}
        data={messages}
        keyExtractor={(m)=>m.id}
        contentContainerStyle={{ padding:16, gap:12 }}
        renderItem={({item})=>(
          <View style={{
            alignSelf: item.role==="user" ? "flex-end" : "flex-start",
            backgroundColor: item.role==="user" ? "#2563eb" : "#e5e7eb",
            padding:12, borderRadius:12, maxWidth:"80%"
          }}>
            <Text style={{ color: item.role==="user" ? "white" : "black" }}>{item.content}</Text>
          </View>
        )}
      />

      <View style={{ flexDirection:"row", padding:12, gap:8, alignItems:"center", borderTopWidth:1, borderColor:"#eee" }}>
        <RNInput
          placeholder="Type a message"
          value={input}
          onChangeText={setInput}
          style={{ flex:1, padding:12, borderWidth:1, borderColor:"#ddd", borderRadius:10 }}
          onSubmitEditing={async ()=>{ const t=input; setInput(""); await send(t, streamer); }}
        />
        <Button mode="contained" disabled={!input || sending}
          onPress={async ()=>{ const t=input; setInput(""); await send(t, streamer); }}>
          {sending ? <ActivityIndicator animating size="small" color="white" /> : "Send"}
        </Button>
      </View>
    </KeyboardAvoidingView>
  );
}
